[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/textures/orb_textures/orb6.jpg" type="Texture" id=1]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform int max_ir: hint_range(0, 100) = 100;
uniform float max_dis: hint_range(0.0, 10.0) =  10;
uniform sampler2D uv_texture : hint_black;
uniform sampler2D uv_offset_texture : hint_black;
uniform sampler2D albedo_texture : hint_albedo;
uniform vec4 albedo : hint_color;
uniform vec2 uv_offset_scale = vec2(-0.2, -0.1);
varying vec3 vertex_pos;
uniform float r;
uniform float g;
uniform float b;

uniform vec3 rgb;

uniform vec4 _screen_uv;
varying vec2 p;
uniform float dx;
uniform float dy;
varying float d;
varying float luma;
uniform float wave_speed: hint_range(0,1) = 0.1;
uniform vec2 uv_offset = vec2(-0.2, -0.1);

uniform sampler2D base_noise;
uniform vec2 time_base = vec2(0.3, 0.7);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
varying vec3 uv1_offset_movement;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;




void vertex() {
	vertex_pos = VERTEX;
	float vertex_y = UV.y/VERTEX.x * TIME;
	float noise = texture(uv_offset_texture, vertex_y * UV * 0.3).y;
	VERTEX.x += noise;
	VERTEX.y += noise/2.0;
	uv1_offset_movement += vec3(sin(TIME *0.10), uv1_offset.y/noise * sin(0.3) ,0.0);
	UV = UV*uv1_scale.xy+(uv1_offset.xy / uv1_offset_movement.xy) ;
}



void fragment() {
	vec2 uv_base_y = UV * uv_offset;
	uv_base_y += TIME * wave_speed;
	float red_ramp = texture(base_noise, wave_speed * uv_base_y).r;
	ALBEDO = vec3(red_ramp , sin(TIME * red_ramp) , 20.0);
	vec2 base_uv = UV;
    vec4 albedo_tex = texture(albedo_texture,base_uv);
    ALBEDO = albedo.rgb * albedo_tex.rgb;
//	albedo_tex += vec4(3.0,3.0,3.0, 1.0);
//	EMISSION = vec3(sin(TIME *0.0), 0.0, sin(TIME *0.3));
	ROUGHNESS =  0.5;

}
"

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
width = 100
height = 100
seamless = true
as_normalmap = true
bump_strength = 7.7
noise = SubResource( 4 )
noise_offset = Vector2( 0.908, 0 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/max_ir = 100
shader_param/max_dis = 10.0
shader_param/albedo = Color( 0.839216, 0.992157, 1, 1 )
shader_param/uv_offset_scale = Vector2( -4.224, -0.1 )
shader_param/r = 2.728
shader_param/g = 1.238
shader_param/b = 99.0
shader_param/rgb = Vector3( 0.968, 0.632, 0 )
shader_param/_screen_uv = Plane( 0.297, 0, 1.105, 0 )
shader_param/dx = 1.405
shader_param/dy = 0.535
shader_param/wave_speed = 0.0
shader_param/uv_offset = Vector2( -0.2, -0.1 )
shader_param/time_base = Vector2( 0.3, 0.7 )
shader_param/uv1_scale = Vector3( 10.138, 0.226, 0.277 )
shader_param/uv1_offset = Vector3( 0, 23.256, 0 )
shader_param/uv2_scale = null
shader_param/uv2_offset = Vector3( 0.312, 0, 0 )
shader_param/uv_offset_texture = SubResource( 5 )
shader_param/albedo_texture = ExtResource( 1 )

[node name="Spatial" type="Spatial"]

[node name="orb" type="Spatial" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="orb"]
transform = Transform( 0.464562, 0, 0, 0, 0.464562, 0, 0, 0, 0.464562, -0.0750644, 0.180133, -2.31252 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.999987, -0.00513124, 0, 0.00513124, 0.999987, 0.003, 0.795, 3.912 )
fov = 25.6
near = 0.02
far = 176.6
